{"ast":null,"code":"var _jsxFileName = \"/home/aayushi/Documents/Aayushi/ReactJs/movie_booking_system/src/Pages/HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { HomeCard } from '../Components/HomeCard';\nimport './HomePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomePage = props => {\n  _s();\n  const scrollRef = useRef(null);\n  const scrollIndex = useRef(0);\n\n  // Add cloned first movie to end for looping illusion\n  const moviesWithClone = props.movies.length > 0 ? [...props.movies, props.movies[0]] : [];\n  useEffect(() => {\n    const container = scrollRef.current;\n    if (!container || props.movies.length === 0) return;\n    const totalMovies = props.movies.length;\n    const viewportWidth = container.offsetWidth;\n    const scrollNext = () => {\n      scrollIndex.current += 1;\n      container.scrollTo({\n        left: viewportWidth * scrollIndex.current,\n        behavior: 'smooth'\n      });\n\n      // When reaching the clone, reset to the actual first item instantly (but invisibly)\n      if (scrollIndex.current === totalMovies) {\n        setTimeout(() => {\n          container.scrollTo({\n            left: 0,\n            behavior: 'auto'\n          });\n          scrollIndex.current = 0;\n        }, 0); // allow the smooth scroll to finish\n      }\n    };\n    const interval = setInterval(scrollNext, 4000);\n    return () => clearInterval(interval);\n  }, [props.movies]);\n  if (!props.movies.length) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Movies yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fullscreen-scroll\",\n    ref: scrollRef,\n    children: moviesWithClone.map((movie, index) => /*#__PURE__*/_jsxDEV(HomeCard, {\n      movie: movie\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"ZaUYPblDS2rSBjGO5gWXSRtGF4E=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useRef","HomeCard","jsxDEV","_jsxDEV","HomePage","props","_s","scrollRef","scrollIndex","moviesWithClone","movies","length","container","current","totalMovies","viewportWidth","offsetWidth","scrollNext","scrollTo","left","behavior","setTimeout","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","map","movie","index","_c","$RefreshReg$"],"sources":["/home/aayushi/Documents/Aayushi/ReactJs/movie_booking_system/src/Pages/HomePage.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { HomeCard } from '../Components/HomeCard';\nimport './HomePage.css';\n\nexport const HomePage = (props) => {\n  const scrollRef = useRef(null);\n  const scrollIndex = useRef(0);\n\n  // Add cloned first movie to end for looping illusion\n  const moviesWithClone = props.movies.length > 0\n    ? [...props.movies, props.movies[0]]\n    : [];\n\n  useEffect(() => {\n    const container = scrollRef.current;\n    if (!container || props.movies.length === 0) return;\n\n    const totalMovies = props.movies.length;\n    const viewportWidth = container.offsetWidth;\n\n    const scrollNext = () => {\n      scrollIndex.current += 1;\n\n      container.scrollTo({\n        left: viewportWidth * scrollIndex.current,\n        behavior: 'smooth',\n      });\n\n      // When reaching the clone, reset to the actual first item instantly (but invisibly)\n      if (scrollIndex.current === totalMovies) {\n        setTimeout(() => {\n          container.scrollTo({ left: 0, behavior: 'auto' });\n          scrollIndex.current = 0;\n        }, 0); // allow the smooth scroll to finish\n      }\n    };\n\n    const interval = setInterval(scrollNext, 4000);\n\n    return () => clearInterval(interval);\n  }, [props.movies]);\n\n  if (!props.movies.length) {\n    return <p>No Movies yet</p>;\n  }\n\n  return (\n    <div className=\"fullscreen-scroll\" ref={scrollRef}>\n      {moviesWithClone.map((movie, index) => (\n        <HomeCard movie={movie} key={index} />\n      ))}\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,OAAO,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACjC,MAAMC,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMQ,WAAW,GAAGR,MAAM,CAAC,CAAC,CAAC;;EAE7B;EACA,MAAMS,eAAe,GAAGJ,KAAK,CAACK,MAAM,CAACC,MAAM,GAAG,CAAC,GAC3C,CAAC,GAAGN,KAAK,CAACK,MAAM,EAAEL,KAAK,CAACK,MAAM,CAAC,CAAC,CAAC,CAAC,GAClC,EAAE;EAENX,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAGL,SAAS,CAACM,OAAO;IACnC,IAAI,CAACD,SAAS,IAAIP,KAAK,CAACK,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;IAE7C,MAAMG,WAAW,GAAGT,KAAK,CAACK,MAAM,CAACC,MAAM;IACvC,MAAMI,aAAa,GAAGH,SAAS,CAACI,WAAW;IAE3C,MAAMC,UAAU,GAAGA,CAAA,KAAM;MACvBT,WAAW,CAACK,OAAO,IAAI,CAAC;MAExBD,SAAS,CAACM,QAAQ,CAAC;QACjBC,IAAI,EAAEJ,aAAa,GAAGP,WAAW,CAACK,OAAO;QACzCO,QAAQ,EAAE;MACZ,CAAC,CAAC;;MAEF;MACA,IAAIZ,WAAW,CAACK,OAAO,KAAKC,WAAW,EAAE;QACvCO,UAAU,CAAC,MAAM;UACfT,SAAS,CAACM,QAAQ,CAAC;YAAEC,IAAI,EAAE,CAAC;YAAEC,QAAQ,EAAE;UAAO,CAAC,CAAC;UACjDZ,WAAW,CAACK,OAAO,GAAG,CAAC;QACzB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MACT;IACF,CAAC;IAED,MAAMS,QAAQ,GAAGC,WAAW,CAACN,UAAU,EAAE,IAAI,CAAC;IAE9C,OAAO,MAAMO,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACjB,KAAK,CAACK,MAAM,CAAC,CAAC;EAElB,IAAI,CAACL,KAAK,CAACK,MAAM,CAACC,MAAM,EAAE;IACxB,oBAAOR,OAAA;MAAAsB,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC7B;EAEA,oBACE1B,OAAA;IAAK2B,SAAS,EAAC,mBAAmB;IAACC,GAAG,EAAExB,SAAU;IAAAkB,QAAA,EAC/ChB,eAAe,CAACuB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAChC/B,OAAA,CAACF,QAAQ;MAACgC,KAAK,EAAEA;IAAM,GAAMC,KAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACtC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACvB,EAAA,CAjDWF,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}